{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Cloudflare-Router A library for easily processing incoming requests to Cloudflare Workers. Created with TypeScript! This module is super-easy to use, and it's plug-and-play. Literally. All you have to do to start is to tell the module when you want to process a request, and it will handle everything for you. In order to tell the module when it should process a request (or more specifically ,telling the router ): const { Router } = require(\"cloudflare-router\"); const router = new Router(); const apiRouter = new Router(); // Connecting routers router.use(\"/api\", apiRouter); // Setting up paths router.get(\"/\", (req, res) => res.text(\"Hello, world!\")); apiRouter.get(\"/\", (req, res) => res.text(\"Welcome to the API!\")); apiRouter.get(\"/welcome/:name\", (req, res) => res.text(`Welcome, ${req.params.name}`)); // Listening for requests addEventListener(\"fetch\", event => { // Minimal boilerplate required event.respondWith( router.serve(event.request) .then(res => res.response) ); }); Installing Simply enter the following command into your terminal: npm install cloudflare-router","title":"Home"},{"location":"index.html#cloudflare-router","text":"A library for easily processing incoming requests to Cloudflare Workers. Created with TypeScript! This module is super-easy to use, and it's plug-and-play. Literally. All you have to do to start is to tell the module when you want to process a request, and it will handle everything for you. In order to tell the module when it should process a request (or more specifically ,telling the router ): const { Router } = require(\"cloudflare-router\"); const router = new Router(); const apiRouter = new Router(); // Connecting routers router.use(\"/api\", apiRouter); // Setting up paths router.get(\"/\", (req, res) => res.text(\"Hello, world!\")); apiRouter.get(\"/\", (req, res) => res.text(\"Welcome to the API!\")); apiRouter.get(\"/welcome/:name\", (req, res) => res.text(`Welcome, ${req.params.name}`)); // Listening for requests addEventListener(\"fetch\", event => { // Minimal boilerplate required event.respondWith( router.serve(event.request) .then(res => res.response) ); });","title":"Cloudflare-Router"},{"location":"index.html#installing","text":"Simply enter the following command into your terminal: npm install cloudflare-router","title":"Installing"},{"location":"modules.html","text":"cloudflare-router Table of contents Modules index router/Route router/RoutePath router/Router router/RouterRequest router/RouterResponse","title":"cloudflare-router"},{"location":"modules.html#cloudflare-router","text":"","title":"cloudflare-router"},{"location":"modules.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules.html#modules","text":"index router/Route router/RoutePath router/Router router/RouterRequest router/RouterResponse","title":"Modules"},{"location":"classes/router_route.default.html","text":"Class: default<AdditionalDataType> router/Route .default Type parameters Name Type AdditionalDataType extends unknown Table of contents Constructors constructor Properties handler isHandlerRouter isMiddleware method path routeIndex router Methods isRouteHandlerRouter isRouteMiddleware matchesRequest Constructors constructor \u2022 new default < AdditionalDataType >( router , options ) Creates a Route class instance Type parameters Name Type AdditionalDataType extends unknown Parameters Name Type router default < AdditionalDataType > options RouteOptions < AdditionalDataType > Defined in router/Route.ts:85 Properties handler \u2022 handler : RouteHandler < AdditionalDataType > The Router/function that will handle the route when matched Defined in router/Route.ts:70 isHandlerRouter \u2022 isHandlerRouter : boolean If the handler to this route is a Router. Defined in router/Route.ts:80 isMiddleware \u2022 isMiddleware : boolean If this is a middleware (as in it will do something before the final non-middleware route, AKA pre-processing). Defined in router/Route.ts:75 method \u2022 method : Methods The method that this route accepts Defined in router/Route.ts:60 path \u2022 path : default < AdditionalDataType > The route's path object Defined in router/Route.ts:65 routeIndex \u2022 routeIndex : number The \"index\" for this route, counted globally. It's used to know which order to execute middlewares in. Defined in router/Route.ts:85 router \u2022 router : default < AdditionalDataType > The Router class instance responsible for creating this route Defined in router/Route.ts:54 Methods isRouteHandlerRouter \u25b8 isRouteHandlerRouter (): boolean Returns whether the handler for this route is an instance of the Router object. Returns boolean Defined in router/Route.ts:116 isRouteMiddleware \u25b8 isRouteMiddleware (): boolean Returns whether this route is used as a middleware or not, by programmatically checking if the handler is an instance of the Router object. Returns boolean Defined in router/Route.ts:108 matchesRequest \u25b8 matchesRequest ( request ): Object Returns information about the match from an incoming request, such as if it matches the path & method, and any data from the UrlPattern API. Parameters Name Type request default < AdditionalDataType > Returns Object Name Type methodMatches boolean pathMatchData any pathMatches boolean Defined in router/Route.ts:126","title":"Class: default<AdditionalDataType\\>"},{"location":"classes/router_route.default.html#class-defaultadditionaldatatype","text":"router/Route .default","title":"Class: default&lt;AdditionalDataType>"},{"location":"classes/router_route.default.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_route.default.html#table-of-contents","text":"","title":"Table of contents"},{"location":"classes/router_route.default.html#constructors","text":"constructor","title":"Constructors"},{"location":"classes/router_route.default.html#properties","text":"handler isHandlerRouter isMiddleware method path routeIndex router","title":"Properties"},{"location":"classes/router_route.default.html#methods","text":"isRouteHandlerRouter isRouteMiddleware matchesRequest","title":"Methods"},{"location":"classes/router_route.default.html#constructors_1","text":"","title":"Constructors"},{"location":"classes/router_route.default.html#constructor","text":"\u2022 new default < AdditionalDataType >( router , options ) Creates a Route class instance","title":"constructor"},{"location":"classes/router_route.default.html#type-parameters_1","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_route.default.html#parameters","text":"Name Type router default < AdditionalDataType > options RouteOptions < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_route.default.html#defined-in","text":"router/Route.ts:85","title":"Defined in"},{"location":"classes/router_route.default.html#properties_1","text":"","title":"Properties"},{"location":"classes/router_route.default.html#handler","text":"\u2022 handler : RouteHandler < AdditionalDataType > The Router/function that will handle the route when matched","title":"handler"},{"location":"classes/router_route.default.html#defined-in_1","text":"router/Route.ts:70","title":"Defined in"},{"location":"classes/router_route.default.html#ishandlerrouter","text":"\u2022 isHandlerRouter : boolean If the handler to this route is a Router.","title":"isHandlerRouter"},{"location":"classes/router_route.default.html#defined-in_2","text":"router/Route.ts:80","title":"Defined in"},{"location":"classes/router_route.default.html#ismiddleware","text":"\u2022 isMiddleware : boolean If this is a middleware (as in it will do something before the final non-middleware route, AKA pre-processing).","title":"isMiddleware"},{"location":"classes/router_route.default.html#defined-in_3","text":"router/Route.ts:75","title":"Defined in"},{"location":"classes/router_route.default.html#method","text":"\u2022 method : Methods The method that this route accepts","title":"method"},{"location":"classes/router_route.default.html#defined-in_4","text":"router/Route.ts:60","title":"Defined in"},{"location":"classes/router_route.default.html#path","text":"\u2022 path : default < AdditionalDataType > The route's path object","title":"path"},{"location":"classes/router_route.default.html#defined-in_5","text":"router/Route.ts:65","title":"Defined in"},{"location":"classes/router_route.default.html#routeindex","text":"\u2022 routeIndex : number The \"index\" for this route, counted globally. It's used to know which order to execute middlewares in.","title":"routeIndex"},{"location":"classes/router_route.default.html#defined-in_6","text":"router/Route.ts:85","title":"Defined in"},{"location":"classes/router_route.default.html#router","text":"\u2022 router : default < AdditionalDataType > The Router class instance responsible for creating this route","title":"router"},{"location":"classes/router_route.default.html#defined-in_7","text":"router/Route.ts:54","title":"Defined in"},{"location":"classes/router_route.default.html#methods_1","text":"","title":"Methods"},{"location":"classes/router_route.default.html#isroutehandlerrouter","text":"\u25b8 isRouteHandlerRouter (): boolean Returns whether the handler for this route is an instance of the Router object.","title":"isRouteHandlerRouter"},{"location":"classes/router_route.default.html#returns","text":"boolean","title":"Returns"},{"location":"classes/router_route.default.html#defined-in_8","text":"router/Route.ts:116","title":"Defined in"},{"location":"classes/router_route.default.html#isroutemiddleware","text":"\u25b8 isRouteMiddleware (): boolean Returns whether this route is used as a middleware or not, by programmatically checking if the handler is an instance of the Router object.","title":"isRouteMiddleware"},{"location":"classes/router_route.default.html#returns_1","text":"boolean","title":"Returns"},{"location":"classes/router_route.default.html#defined-in_9","text":"router/Route.ts:108","title":"Defined in"},{"location":"classes/router_route.default.html#matchesrequest","text":"\u25b8 matchesRequest ( request ): Object Returns information about the match from an incoming request, such as if it matches the path & method, and any data from the UrlPattern API.","title":"matchesRequest"},{"location":"classes/router_route.default.html#parameters_1","text":"Name Type request default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_route.default.html#returns_2","text":"Object Name Type methodMatches boolean pathMatchData any pathMatches boolean","title":"Returns"},{"location":"classes/router_route.default.html#defined-in_10","text":"router/Route.ts:126","title":"Defined in"},{"location":"classes/router_routepath.default.html","text":"Class: default<AdditionalDataType> router/RoutePath .default Type parameters Name AdditionalDataType Table of contents Constructors constructor Properties fixedPath inputPath route urlPattern Methods createPatternFromPath fixPath matchesInputPath Constructors constructor \u2022 new default < AdditionalDataType >( route , inputPath ) Creates a RoutePath for a Route object, which is used to handle anything path-related for a route Type parameters Name AdditionalDataType Parameters Name Type route default < AdditionalDataType > inputPath string Defined in router/RoutePath.ts:25 Properties fixedPath \u2022 fixedPath : string The path after it's been formatted and fixed properly (i.e. trailing /, etc.) Defined in router/RoutePath.ts:20 inputPath \u2022 inputPath : string The \"raw\" input path that was provided to this RoutePath instance, before it was \"fixed\" Defined in router/RoutePath.ts:25 route \u2022 route : default < AdditionalDataType > The route that this path belongs to Defined in router/RoutePath.ts:10 urlPattern \u2022 urlPattern : UrlPattern The URL pattern used for matching incoming requests Defined in router/RoutePath.ts:15 Methods createPatternFromPath \u25b8 createPatternFromPath ( path ): UrlPattern Creates a URL Pattern from the given argument \"path\" Parameters Name Type path string Returns UrlPattern Defined in router/RoutePath.ts:63 fixPath \u25b8 fixPath ( inputPath ): string Parameters Name Type inputPath string Returns string Defined in router/RoutePath.ts:39 matchesInputPath \u25b8 matchesInputPath ( inputPath ): Object If this RoutePath instance matches with a given input (request) path Parameters Name Type inputPath string Returns Object Name Type doesMatch boolean matchData any Defined in router/RoutePath.ts:49","title":"Class: default<AdditionalDataType\\>"},{"location":"classes/router_routepath.default.html#class-defaultadditionaldatatype","text":"router/RoutePath .default","title":"Class: default&lt;AdditionalDataType>"},{"location":"classes/router_routepath.default.html#type-parameters","text":"Name AdditionalDataType","title":"Type parameters"},{"location":"classes/router_routepath.default.html#table-of-contents","text":"","title":"Table of contents"},{"location":"classes/router_routepath.default.html#constructors","text":"constructor","title":"Constructors"},{"location":"classes/router_routepath.default.html#properties","text":"fixedPath inputPath route urlPattern","title":"Properties"},{"location":"classes/router_routepath.default.html#methods","text":"createPatternFromPath fixPath matchesInputPath","title":"Methods"},{"location":"classes/router_routepath.default.html#constructors_1","text":"","title":"Constructors"},{"location":"classes/router_routepath.default.html#constructor","text":"\u2022 new default < AdditionalDataType >( route , inputPath ) Creates a RoutePath for a Route object, which is used to handle anything path-related for a route","title":"constructor"},{"location":"classes/router_routepath.default.html#type-parameters_1","text":"Name AdditionalDataType","title":"Type parameters"},{"location":"classes/router_routepath.default.html#parameters","text":"Name Type route default < AdditionalDataType > inputPath string","title":"Parameters"},{"location":"classes/router_routepath.default.html#defined-in","text":"router/RoutePath.ts:25","title":"Defined in"},{"location":"classes/router_routepath.default.html#properties_1","text":"","title":"Properties"},{"location":"classes/router_routepath.default.html#fixedpath","text":"\u2022 fixedPath : string The path after it's been formatted and fixed properly (i.e. trailing /, etc.)","title":"fixedPath"},{"location":"classes/router_routepath.default.html#defined-in_1","text":"router/RoutePath.ts:20","title":"Defined in"},{"location":"classes/router_routepath.default.html#inputpath","text":"\u2022 inputPath : string The \"raw\" input path that was provided to this RoutePath instance, before it was \"fixed\"","title":"inputPath"},{"location":"classes/router_routepath.default.html#defined-in_2","text":"router/RoutePath.ts:25","title":"Defined in"},{"location":"classes/router_routepath.default.html#route","text":"\u2022 route : default < AdditionalDataType > The route that this path belongs to","title":"route"},{"location":"classes/router_routepath.default.html#defined-in_3","text":"router/RoutePath.ts:10","title":"Defined in"},{"location":"classes/router_routepath.default.html#urlpattern","text":"\u2022 urlPattern : UrlPattern The URL pattern used for matching incoming requests","title":"urlPattern"},{"location":"classes/router_routepath.default.html#defined-in_4","text":"router/RoutePath.ts:15","title":"Defined in"},{"location":"classes/router_routepath.default.html#methods_1","text":"","title":"Methods"},{"location":"classes/router_routepath.default.html#createpatternfrompath","text":"\u25b8 createPatternFromPath ( path ): UrlPattern Creates a URL Pattern from the given argument \"path\"","title":"createPatternFromPath"},{"location":"classes/router_routepath.default.html#parameters_1","text":"Name Type path string","title":"Parameters"},{"location":"classes/router_routepath.default.html#returns","text":"UrlPattern","title":"Returns"},{"location":"classes/router_routepath.default.html#defined-in_5","text":"router/RoutePath.ts:63","title":"Defined in"},{"location":"classes/router_routepath.default.html#fixpath","text":"\u25b8 fixPath ( inputPath ): string","title":"fixPath"},{"location":"classes/router_routepath.default.html#parameters_2","text":"Name Type inputPath string","title":"Parameters"},{"location":"classes/router_routepath.default.html#returns_1","text":"string","title":"Returns"},{"location":"classes/router_routepath.default.html#defined-in_6","text":"router/RoutePath.ts:39","title":"Defined in"},{"location":"classes/router_routepath.default.html#matchesinputpath","text":"\u25b8 matchesInputPath ( inputPath ): Object If this RoutePath instance matches with a given input (request) path","title":"matchesInputPath"},{"location":"classes/router_routepath.default.html#parameters_3","text":"Name Type inputPath string","title":"Parameters"},{"location":"classes/router_routepath.default.html#returns_2","text":"Object Name Type doesMatch boolean matchData any","title":"Returns"},{"location":"classes/router_routepath.default.html#defined-in_7","text":"router/RoutePath.ts:49","title":"Defined in"},{"location":"classes/router_router.default.html","text":"Class: default<AdditionalDataType> router/Router .default Type parameters Name Type AdditionalDataType extends unknown Table of contents Constructors constructor Properties basePath customResponseBuilder isMainRouter isWaterfallHandling mainRouter parentRouter routes Methods any assignSelfAsMainRouter createRoute createRouteAndAdd delete executeMiddleware findMatchingRoutes finishResponse fixPath get getMainRouter head init options post processRequest serveRequest updateSelfRoutes use useBulk Constructors constructor \u2022 new default < AdditionalDataType >( options? ) Creates a new Router. Only one router can be used for .serveRequest(), attempting to use multiple routers for this will result in an error. Type parameters Name Type AdditionalDataType extends unknown Parameters Name Type options? RouterOptions < AdditionalDataType > Defined in router/Router.ts:56 Properties basePath \u2022 basePath : string Defined in router/Router.ts:29 customResponseBuilder \u2022 customResponseBuilder : undefined | ( routerResponse : default < AdditionalDataType >) => any If you want to build your own responses from the data collected from your application, you do it here The only argument in the callback function is the RouterResponse instance. Defined in router/Router.ts:56 isMainRouter \u2022 isMainRouter : boolean All router instances will be assigned to false by default, because only the router that's called using .serve() will be considered the main router. Defined in router/Router.ts:49 isWaterfallHandling \u2022 isWaterfallHandling : boolean Defined in router/Router.ts:30 mainRouter \u2022 mainRouter : null | default < AdditionalDataType > The main router that connects all other routers Defined in router/Router.ts:43 parentRouter \u2022 parentRouter : null | default < AdditionalDataType > If this is a sub-router of another Router, this property will be defined with the Router that's connected to this Defined in router/Router.ts:37 routes \u2022 routes : default < AdditionalDataType >[] Defined in router/Router.ts:31 Methods any \u25b8 any ( path , handler ): void Adds a handler for a request that hits this path regardless of the method used. Parameters Name Type path string handler RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:314 assignSelfAsMainRouter \u25b8 assignSelfAsMainRouter (): void Used internally, which will declare this router as the main router. Note there can only be one main router, otherwise unexpected issues can arise, and will most likely throw errors. Returns void Defined in router/Router.ts:199 createRoute \u25b8 createRoute ( options ): default < AdditionalDataType > Used internally as a standardized way of registering routes. Normally you want to use .get() or .post(), but this method is also available. This will only create a route, not apply it to the router. Use router.createRouteAndAdd() to add the route to the router automatically. Parameters Name Type options RouteOptions < AdditionalDataType > Returns default < AdditionalDataType > Defined in router/Router.ts:134 createRouteAndAdd \u25b8 createRouteAndAdd ( options ): default < AdditionalDataType > Creates a route and adds it to the current router instance. Used internally to standardize the way of creating routes. Normally you'll want to use .get() or .post() to set up routes. Parameters Name Type options RouteOptions < AdditionalDataType > Returns default < AdditionalDataType > Defined in router/Router.ts:148 delete \u25b8 delete ( path , handler ): void Adds a handler for a request that hits this path using the DELETE HTTP method. Parameters Name Type path string handler RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:300 executeMiddleware \u25b8 executeMiddleware ( middleware , request , response ): Promise < boolean > Used internally when wanting to execute a middleware (running it, not.. beheading it.. jeez). It returns a promise which contains a boolean indicating the success status. If one middleware is failing or wants to abort further processing, next(true) is used to indicate this. Parameters Name Type middleware default < AdditionalDataType > request default < AdditionalDataType > response default < AdditionalDataType > Returns Promise < boolean > Defined in router/Router.ts:425 findMatchingRoutes \u25b8 findMatchingRoutes ( request ): MatchingRoute < AdditionalDataType >[] Used internally to recursively look for routes that match the path and method. Will return anything that matches regardless if it's a middleware or not. Anything that's a route will be returned as long as it matches. Parameters Name Type request default < AdditionalDataType > Returns MatchingRoute < AdditionalDataType >[] Defined in router/Router.ts:215 finishResponse \u25b8 finishResponse ( _request , response ): Promise < BuiltResponseObject < AdditionalDataType >> Used internally when the response instance is finalized and ready to return the response data. Parameters Name Type _request default < AdditionalDataType > response default < AdditionalDataType > Returns Promise < BuiltResponseObject < AdditionalDataType >> Defined in router/Router.ts:402 fixPath \u25b8 fixPath ( inputPath ): string Returns a \"fixed\" path of the input path, setting up basePath and similar Parameters Name Type inputPath string Returns string Defined in router/Router.ts:93 get \u25b8 get ( path , handler ): void Adds a handler for a request that hits this path using the GET HTTP method. Parameters Name Type path string handler RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:244 getMainRouter \u25b8 getMainRouter (): default < AdditionalDataType > Used internally for getting the router which is considered the main router. There can ( should ) only be one main router, otherwise unexpected issues may arise, and errors will most likely be thrown. Returns default < AdditionalDataType > Defined in router/Router.ts:494 head \u25b8 head ( path , handler ): void Adds a handler for a request that hits this path using the HEAD HTTP method. Parameters Name Type path string handler RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:286 init \u25b8 init ( newBasePath , parentRouter? ): void Used internally when the router.use() method is called to update the descendants of the router (all connected routers and routes) Parameters Name Type newBasePath string parentRouter? default < AdditionalDataType > Returns void Defined in router/Router.ts:80 options \u25b8 options ( path , handler ): void Adds a handler for a request that hits this path using the OPTIONS HTTP method. Parameters Name Type path string handler RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:272 post \u25b8 post ( path , handler ): void Adds a handler for a request that hits this path using the POST HTTP method. Parameters Name Type path string handler RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:258 processRequest \u25b8 processRequest ( routerRequest , routerResponse ): Promise < BuiltResponseObject < AdditionalDataType >> Used internally for further processing of the request (and getting a response from the application) Parameters Name Type routerRequest default < AdditionalDataType > routerResponse default < AdditionalDataType > Returns Promise < BuiltResponseObject < AdditionalDataType >> Defined in router/Router.ts:329 serveRequest \u25b8 serveRequest ( incomingRequest , additionalData ): Promise < BuiltResponseObject < AdditionalDataType >> The method to serve the incoming request and pass it on to cloudflare-router for processing. Use only this method unless you know what you're doing. Parameters Name Type incomingRequest Request additionalData AdditionalDataType Returns Promise < BuiltResponseObject < AdditionalDataType >> Defined in router/Router.ts:466 updateSelfRoutes \u25b8 updateSelfRoutes (): void Updates the routes this router has set up. Used internally on router.init() (which is also called internally) Returns void Defined in router/Router.ts:109 use \u25b8 use ( arg0 , arg1? ): void Sets up a middleware for a certain path. Use router.any() to process requests with any method Parameters Name Type arg0 string | RouteHandler < AdditionalDataType > arg1? RouteHandler < AdditionalDataType > Returns void Defined in router/Router.ts:160 useBulk \u25b8 useBulk ( list ): void Makes it easier to set up a batch of .use \"commands\". Provide the array with (optional) pathname and the handler for it. Parameters Name Type list { handler : RouteHandler < AdditionalDataType > ; path? : string }[] Returns void Defined in router/Router.ts:188","title":"Class: default<AdditionalDataType\\>"},{"location":"classes/router_router.default.html#class-defaultadditionaldatatype","text":"router/Router .default","title":"Class: default&lt;AdditionalDataType>"},{"location":"classes/router_router.default.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_router.default.html#table-of-contents","text":"","title":"Table of contents"},{"location":"classes/router_router.default.html#constructors","text":"constructor","title":"Constructors"},{"location":"classes/router_router.default.html#properties","text":"basePath customResponseBuilder isMainRouter isWaterfallHandling mainRouter parentRouter routes","title":"Properties"},{"location":"classes/router_router.default.html#methods","text":"any assignSelfAsMainRouter createRoute createRouteAndAdd delete executeMiddleware findMatchingRoutes finishResponse fixPath get getMainRouter head init options post processRequest serveRequest updateSelfRoutes use useBulk","title":"Methods"},{"location":"classes/router_router.default.html#constructors_1","text":"","title":"Constructors"},{"location":"classes/router_router.default.html#constructor","text":"\u2022 new default < AdditionalDataType >( options? ) Creates a new Router. Only one router can be used for .serveRequest(), attempting to use multiple routers for this will result in an error.","title":"constructor"},{"location":"classes/router_router.default.html#type-parameters_1","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_router.default.html#parameters","text":"Name Type options? RouterOptions < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#defined-in","text":"router/Router.ts:56","title":"Defined in"},{"location":"classes/router_router.default.html#properties_1","text":"","title":"Properties"},{"location":"classes/router_router.default.html#basepath","text":"\u2022 basePath : string","title":"basePath"},{"location":"classes/router_router.default.html#defined-in_1","text":"router/Router.ts:29","title":"Defined in"},{"location":"classes/router_router.default.html#customresponsebuilder","text":"\u2022 customResponseBuilder : undefined | ( routerResponse : default < AdditionalDataType >) => any If you want to build your own responses from the data collected from your application, you do it here The only argument in the callback function is the RouterResponse instance.","title":"customResponseBuilder"},{"location":"classes/router_router.default.html#defined-in_2","text":"router/Router.ts:56","title":"Defined in"},{"location":"classes/router_router.default.html#ismainrouter","text":"\u2022 isMainRouter : boolean All router instances will be assigned to false by default, because only the router that's called using .serve() will be considered the main router.","title":"isMainRouter"},{"location":"classes/router_router.default.html#defined-in_3","text":"router/Router.ts:49","title":"Defined in"},{"location":"classes/router_router.default.html#iswaterfallhandling","text":"\u2022 isWaterfallHandling : boolean","title":"isWaterfallHandling"},{"location":"classes/router_router.default.html#defined-in_4","text":"router/Router.ts:30","title":"Defined in"},{"location":"classes/router_router.default.html#mainrouter","text":"\u2022 mainRouter : null | default < AdditionalDataType > The main router that connects all other routers","title":"mainRouter"},{"location":"classes/router_router.default.html#defined-in_5","text":"router/Router.ts:43","title":"Defined in"},{"location":"classes/router_router.default.html#parentrouter","text":"\u2022 parentRouter : null | default < AdditionalDataType > If this is a sub-router of another Router, this property will be defined with the Router that's connected to this","title":"parentRouter"},{"location":"classes/router_router.default.html#defined-in_6","text":"router/Router.ts:37","title":"Defined in"},{"location":"classes/router_router.default.html#routes","text":"\u2022 routes : default < AdditionalDataType >[]","title":"routes"},{"location":"classes/router_router.default.html#defined-in_7","text":"router/Router.ts:31","title":"Defined in"},{"location":"classes/router_router.default.html#methods_1","text":"","title":"Methods"},{"location":"classes/router_router.default.html#any","text":"\u25b8 any ( path , handler ): void Adds a handler for a request that hits this path regardless of the method used.","title":"any"},{"location":"classes/router_router.default.html#parameters_1","text":"Name Type path string handler RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_8","text":"router/Router.ts:314","title":"Defined in"},{"location":"classes/router_router.default.html#assignselfasmainrouter","text":"\u25b8 assignSelfAsMainRouter (): void Used internally, which will declare this router as the main router. Note there can only be one main router, otherwise unexpected issues can arise, and will most likely throw errors.","title":"assignSelfAsMainRouter"},{"location":"classes/router_router.default.html#returns_1","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_9","text":"router/Router.ts:199","title":"Defined in"},{"location":"classes/router_router.default.html#createroute","text":"\u25b8 createRoute ( options ): default < AdditionalDataType > Used internally as a standardized way of registering routes. Normally you want to use .get() or .post(), but this method is also available. This will only create a route, not apply it to the router. Use router.createRouteAndAdd() to add the route to the router automatically.","title":"createRoute"},{"location":"classes/router_router.default.html#parameters_2","text":"Name Type options RouteOptions < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_2","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_10","text":"router/Router.ts:134","title":"Defined in"},{"location":"classes/router_router.default.html#createrouteandadd","text":"\u25b8 createRouteAndAdd ( options ): default < AdditionalDataType > Creates a route and adds it to the current router instance. Used internally to standardize the way of creating routes. Normally you'll want to use .get() or .post() to set up routes.","title":"createRouteAndAdd"},{"location":"classes/router_router.default.html#parameters_3","text":"Name Type options RouteOptions < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_3","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_11","text":"router/Router.ts:148","title":"Defined in"},{"location":"classes/router_router.default.html#delete","text":"\u25b8 delete ( path , handler ): void Adds a handler for a request that hits this path using the DELETE HTTP method.","title":"delete"},{"location":"classes/router_router.default.html#parameters_4","text":"Name Type path string handler RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_4","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_12","text":"router/Router.ts:300","title":"Defined in"},{"location":"classes/router_router.default.html#executemiddleware","text":"\u25b8 executeMiddleware ( middleware , request , response ): Promise < boolean > Used internally when wanting to execute a middleware (running it, not.. beheading it.. jeez). It returns a promise which contains a boolean indicating the success status. If one middleware is failing or wants to abort further processing, next(true) is used to indicate this.","title":"executeMiddleware"},{"location":"classes/router_router.default.html#parameters_5","text":"Name Type middleware default < AdditionalDataType > request default < AdditionalDataType > response default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_5","text":"Promise < boolean >","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_13","text":"router/Router.ts:425","title":"Defined in"},{"location":"classes/router_router.default.html#findmatchingroutes","text":"\u25b8 findMatchingRoutes ( request ): MatchingRoute < AdditionalDataType >[] Used internally to recursively look for routes that match the path and method. Will return anything that matches regardless if it's a middleware or not. Anything that's a route will be returned as long as it matches.","title":"findMatchingRoutes"},{"location":"classes/router_router.default.html#parameters_6","text":"Name Type request default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_6","text":"MatchingRoute < AdditionalDataType >[]","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_14","text":"router/Router.ts:215","title":"Defined in"},{"location":"classes/router_router.default.html#finishresponse","text":"\u25b8 finishResponse ( _request , response ): Promise < BuiltResponseObject < AdditionalDataType >> Used internally when the response instance is finalized and ready to return the response data.","title":"finishResponse"},{"location":"classes/router_router.default.html#parameters_7","text":"Name Type _request default < AdditionalDataType > response default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_7","text":"Promise < BuiltResponseObject < AdditionalDataType >>","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_15","text":"router/Router.ts:402","title":"Defined in"},{"location":"classes/router_router.default.html#fixpath","text":"\u25b8 fixPath ( inputPath ): string Returns a \"fixed\" path of the input path, setting up basePath and similar","title":"fixPath"},{"location":"classes/router_router.default.html#parameters_8","text":"Name Type inputPath string","title":"Parameters"},{"location":"classes/router_router.default.html#returns_8","text":"string","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_16","text":"router/Router.ts:93","title":"Defined in"},{"location":"classes/router_router.default.html#get","text":"\u25b8 get ( path , handler ): void Adds a handler for a request that hits this path using the GET HTTP method.","title":"get"},{"location":"classes/router_router.default.html#parameters_9","text":"Name Type path string handler RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_9","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_17","text":"router/Router.ts:244","title":"Defined in"},{"location":"classes/router_router.default.html#getmainrouter","text":"\u25b8 getMainRouter (): default < AdditionalDataType > Used internally for getting the router which is considered the main router. There can ( should ) only be one main router, otherwise unexpected issues may arise, and errors will most likely be thrown.","title":"getMainRouter"},{"location":"classes/router_router.default.html#returns_10","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_18","text":"router/Router.ts:494","title":"Defined in"},{"location":"classes/router_router.default.html#head","text":"\u25b8 head ( path , handler ): void Adds a handler for a request that hits this path using the HEAD HTTP method.","title":"head"},{"location":"classes/router_router.default.html#parameters_10","text":"Name Type path string handler RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_11","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_19","text":"router/Router.ts:286","title":"Defined in"},{"location":"classes/router_router.default.html#init","text":"\u25b8 init ( newBasePath , parentRouter? ): void Used internally when the router.use() method is called to update the descendants of the router (all connected routers and routes)","title":"init"},{"location":"classes/router_router.default.html#parameters_11","text":"Name Type newBasePath string parentRouter? default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_12","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_20","text":"router/Router.ts:80","title":"Defined in"},{"location":"classes/router_router.default.html#options","text":"\u25b8 options ( path , handler ): void Adds a handler for a request that hits this path using the OPTIONS HTTP method.","title":"options"},{"location":"classes/router_router.default.html#parameters_12","text":"Name Type path string handler RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_13","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_21","text":"router/Router.ts:272","title":"Defined in"},{"location":"classes/router_router.default.html#post","text":"\u25b8 post ( path , handler ): void Adds a handler for a request that hits this path using the POST HTTP method.","title":"post"},{"location":"classes/router_router.default.html#parameters_13","text":"Name Type path string handler RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_14","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_22","text":"router/Router.ts:258","title":"Defined in"},{"location":"classes/router_router.default.html#processrequest","text":"\u25b8 processRequest ( routerRequest , routerResponse ): Promise < BuiltResponseObject < AdditionalDataType >> Used internally for further processing of the request (and getting a response from the application)","title":"processRequest"},{"location":"classes/router_router.default.html#parameters_14","text":"Name Type routerRequest default < AdditionalDataType > routerResponse default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_15","text":"Promise < BuiltResponseObject < AdditionalDataType >>","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_23","text":"router/Router.ts:329","title":"Defined in"},{"location":"classes/router_router.default.html#serverequest","text":"\u25b8 serveRequest ( incomingRequest , additionalData ): Promise < BuiltResponseObject < AdditionalDataType >> The method to serve the incoming request and pass it on to cloudflare-router for processing. Use only this method unless you know what you're doing.","title":"serveRequest"},{"location":"classes/router_router.default.html#parameters_15","text":"Name Type incomingRequest Request additionalData AdditionalDataType","title":"Parameters"},{"location":"classes/router_router.default.html#returns_16","text":"Promise < BuiltResponseObject < AdditionalDataType >>","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_24","text":"router/Router.ts:466","title":"Defined in"},{"location":"classes/router_router.default.html#updateselfroutes","text":"\u25b8 updateSelfRoutes (): void Updates the routes this router has set up. Used internally on router.init() (which is also called internally)","title":"updateSelfRoutes"},{"location":"classes/router_router.default.html#returns_17","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_25","text":"router/Router.ts:109","title":"Defined in"},{"location":"classes/router_router.default.html#use","text":"\u25b8 use ( arg0 , arg1? ): void Sets up a middleware for a certain path. Use router.any() to process requests with any method","title":"use"},{"location":"classes/router_router.default.html#parameters_16","text":"Name Type arg0 string | RouteHandler < AdditionalDataType > arg1? RouteHandler < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_router.default.html#returns_18","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_26","text":"router/Router.ts:160","title":"Defined in"},{"location":"classes/router_router.default.html#usebulk","text":"\u25b8 useBulk ( list ): void Makes it easier to set up a batch of .use \"commands\". Provide the array with (optional) pathname and the handler for it.","title":"useBulk"},{"location":"classes/router_router.default.html#parameters_17","text":"Name Type list { handler : RouteHandler < AdditionalDataType > ; path? : string }[]","title":"Parameters"},{"location":"classes/router_router.default.html#returns_19","text":"void","title":"Returns"},{"location":"classes/router_router.default.html#defined-in_27","text":"router/Router.ts:188","title":"Defined in"},{"location":"classes/router_routerrequest.default.html","text":"Class: default<AdditionalDataType> router/RouterRequest .default Type parameters Name Type AdditionalDataType extends unknown Table of contents Constructors constructor Properties additionalData body bodyUsed headers incomingRequest matchedParams matchedRoute method path query url urlData Methods parseHeaders setMatchedParams setMatchedRoute fixRequestUrl Constructors constructor \u2022 new default < AdditionalDataType >( incomingRequest , additionalData? ) Type parameters Name Type AdditionalDataType extends unknown Parameters Name Type incomingRequest Request additionalData? AdditionalDataType Defined in router/RouterRequest.ts:67 Properties additionalData \u2022 additionalData : null | AdditionalDataType Any additional data that originated from the .serveRequest() method Defined in router/RouterRequest.ts:16 body \u2022 Optional body : unknown The body (unprocessed) from the incoming request Defined in router/RouterRequest.ts:51 bodyUsed \u2022 bodyUsed : boolean Whether the body was used or not Defined in router/RouterRequest.ts:46 headers \u2022 headers : Record < string , string > The headers originating from the request. All names were lowercased (not values, just the header names) Defined in router/RouterRequest.ts:56 incomingRequest \u2022 incomingRequest : Request The actual, \"raw\" request that was provided in .serveRequest() Defined in router/RouterRequest.ts:11 matchedParams \u2022 Optional matchedParams : Record < string , string > If you set up a /hello/:name route, the value of :name will show up in the matchedParams object Defined in router/RouterRequest.ts:61 matchedRoute \u2022 matchedRoute : null | default < AdditionalDataType > The route that matched to this request (if any) Defined in router/RouterRequest.ts:67 method \u2022 method : Methods The HTTP method of the request. Defined in router/RouterRequest.ts:41 path \u2022 path : string The absolute path that this request was aiming for Defined in router/RouterRequest.ts:31 query \u2022 query : ParsedUrlQuery Any query parameters that was included in the request URL Defined in router/RouterRequest.ts:36 url \u2022 url : string The URL that the request hit Defined in router/RouterRequest.ts:21 urlData \u2022 urlData : URL Data about the URL Defined in router/RouterRequest.ts:26 Methods parseHeaders \u25b8 parseHeaders (): Record < string , string > Parses the headers from the incoming request and adds them to an object All header names will be converted to lower case before adding to the object. Returns Record < string , string > Defined in router/RouterRequest.ts:118 setMatchedParams \u25b8 setMatchedParams ( params ): void Sets the params that this request matched with Parameters Name Type params Record < string , string > Returns void Defined in router/RouterRequest.ts:109 setMatchedRoute \u25b8 setMatchedRoute ( route ): void Sets the route that this request matched with Parameters Name Type route default < AdditionalDataType > Returns void Defined in router/RouterRequest.ts:101 fixRequestUrl \u25b8 Static fixRequestUrl ( url ): string Fixes the request URL to make sure it can be processed by the other parts of this library Parameters Name Type url string Returns string Defined in router/RouterRequest.ts:90","title":"Class: default<AdditionalDataType\\>"},{"location":"classes/router_routerrequest.default.html#class-defaultadditionaldatatype","text":"router/RouterRequest .default","title":"Class: default&lt;AdditionalDataType>"},{"location":"classes/router_routerrequest.default.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_routerrequest.default.html#table-of-contents","text":"","title":"Table of contents"},{"location":"classes/router_routerrequest.default.html#constructors","text":"constructor","title":"Constructors"},{"location":"classes/router_routerrequest.default.html#properties","text":"additionalData body bodyUsed headers incomingRequest matchedParams matchedRoute method path query url urlData","title":"Properties"},{"location":"classes/router_routerrequest.default.html#methods","text":"parseHeaders setMatchedParams setMatchedRoute fixRequestUrl","title":"Methods"},{"location":"classes/router_routerrequest.default.html#constructors_1","text":"","title":"Constructors"},{"location":"classes/router_routerrequest.default.html#constructor","text":"\u2022 new default < AdditionalDataType >( incomingRequest , additionalData? )","title":"constructor"},{"location":"classes/router_routerrequest.default.html#type-parameters_1","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_routerrequest.default.html#parameters","text":"Name Type incomingRequest Request additionalData? AdditionalDataType","title":"Parameters"},{"location":"classes/router_routerrequest.default.html#defined-in","text":"router/RouterRequest.ts:67","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#properties_1","text":"","title":"Properties"},{"location":"classes/router_routerrequest.default.html#additionaldata","text":"\u2022 additionalData : null | AdditionalDataType Any additional data that originated from the .serveRequest() method","title":"additionalData"},{"location":"classes/router_routerrequest.default.html#defined-in_1","text":"router/RouterRequest.ts:16","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#body","text":"\u2022 Optional body : unknown The body (unprocessed) from the incoming request","title":"body"},{"location":"classes/router_routerrequest.default.html#defined-in_2","text":"router/RouterRequest.ts:51","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#bodyused","text":"\u2022 bodyUsed : boolean Whether the body was used or not","title":"bodyUsed"},{"location":"classes/router_routerrequest.default.html#defined-in_3","text":"router/RouterRequest.ts:46","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#headers","text":"\u2022 headers : Record < string , string > The headers originating from the request. All names were lowercased (not values, just the header names)","title":"headers"},{"location":"classes/router_routerrequest.default.html#defined-in_4","text":"router/RouterRequest.ts:56","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#incomingrequest","text":"\u2022 incomingRequest : Request The actual, \"raw\" request that was provided in .serveRequest()","title":"incomingRequest"},{"location":"classes/router_routerrequest.default.html#defined-in_5","text":"router/RouterRequest.ts:11","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#matchedparams","text":"\u2022 Optional matchedParams : Record < string , string > If you set up a /hello/:name route, the value of :name will show up in the matchedParams object","title":"matchedParams"},{"location":"classes/router_routerrequest.default.html#defined-in_6","text":"router/RouterRequest.ts:61","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#matchedroute","text":"\u2022 matchedRoute : null | default < AdditionalDataType > The route that matched to this request (if any)","title":"matchedRoute"},{"location":"classes/router_routerrequest.default.html#defined-in_7","text":"router/RouterRequest.ts:67","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#method","text":"\u2022 method : Methods The HTTP method of the request.","title":"method"},{"location":"classes/router_routerrequest.default.html#defined-in_8","text":"router/RouterRequest.ts:41","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#path","text":"\u2022 path : string The absolute path that this request was aiming for","title":"path"},{"location":"classes/router_routerrequest.default.html#defined-in_9","text":"router/RouterRequest.ts:31","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#query","text":"\u2022 query : ParsedUrlQuery Any query parameters that was included in the request URL","title":"query"},{"location":"classes/router_routerrequest.default.html#defined-in_10","text":"router/RouterRequest.ts:36","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#url","text":"\u2022 url : string The URL that the request hit","title":"url"},{"location":"classes/router_routerrequest.default.html#defined-in_11","text":"router/RouterRequest.ts:21","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#urldata","text":"\u2022 urlData : URL Data about the URL","title":"urlData"},{"location":"classes/router_routerrequest.default.html#defined-in_12","text":"router/RouterRequest.ts:26","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#methods_1","text":"","title":"Methods"},{"location":"classes/router_routerrequest.default.html#parseheaders","text":"\u25b8 parseHeaders (): Record < string , string > Parses the headers from the incoming request and adds them to an object All header names will be converted to lower case before adding to the object.","title":"parseHeaders"},{"location":"classes/router_routerrequest.default.html#returns","text":"Record < string , string >","title":"Returns"},{"location":"classes/router_routerrequest.default.html#defined-in_13","text":"router/RouterRequest.ts:118","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#setmatchedparams","text":"\u25b8 setMatchedParams ( params ): void Sets the params that this request matched with","title":"setMatchedParams"},{"location":"classes/router_routerrequest.default.html#parameters_1","text":"Name Type params Record < string , string >","title":"Parameters"},{"location":"classes/router_routerrequest.default.html#returns_1","text":"void","title":"Returns"},{"location":"classes/router_routerrequest.default.html#defined-in_14","text":"router/RouterRequest.ts:109","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#setmatchedroute","text":"\u25b8 setMatchedRoute ( route ): void Sets the route that this request matched with","title":"setMatchedRoute"},{"location":"classes/router_routerrequest.default.html#parameters_2","text":"Name Type route default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_routerrequest.default.html#returns_2","text":"void","title":"Returns"},{"location":"classes/router_routerrequest.default.html#defined-in_15","text":"router/RouterRequest.ts:101","title":"Defined in"},{"location":"classes/router_routerrequest.default.html#fixrequesturl","text":"\u25b8 Static fixRequestUrl ( url ): string Fixes the request URL to make sure it can be processed by the other parts of this library","title":"fixRequestUrl"},{"location":"classes/router_routerrequest.default.html#parameters_3","text":"Name Type url string","title":"Parameters"},{"location":"classes/router_routerrequest.default.html#returns_3","text":"string","title":"Returns"},{"location":"classes/router_routerrequest.default.html#defined-in_16","text":"router/RouterRequest.ts:90","title":"Defined in"},{"location":"classes/router_routerresponse.default.html","text":"Class: default<AdditionalDataType> router/RouterResponse .default Type parameters Name Type AdditionalDataType extends unknown Table of contents Constructors constructor Properties locals matchedRoute responseOptions routerRequest Methods addTasks build json raw redirectTo setContentType setCustomResponse setMatchedRoute status statusCode text transformResponseOptions Constructors constructor \u2022 new default < AdditionalDataType >( routerRequest ) Creates a RouterResponse class instance. Type parameters Name Type AdditionalDataType extends unknown Parameters Name Type routerRequest default < AdditionalDataType > Defined in router/RouterResponse.ts:92 Properties locals \u2022 locals : Record < any , any > Used as a temporary \"cache\" to share data between middlewares and the response handler (i.e. auth status) Defined in router/RouterResponse.ts:92 matchedRoute \u2022 matchedRoute : null | default < AdditionalDataType > The route that the request matched to Defined in router/RouterResponse.ts:87 responseOptions \u2022 responseOptions : Object Used internally as a temporary thing to hold on values before the .build() method is called Type declaration Name Type Description body ResponseBodyType The body of the response tha will be sent to the client customResponse? Response If the user wants to provide a custom response that should be returned instead of processing by cloudflare-router headers Record < string , string > The headers to be sent to the client redirect Object Information regarding the redirect if the type is set to \"redirect\" redirect.redirectStatusCode? number The status code of the redirect, default is 302 (temporary) redirect.redirectToUrl? string The URL to redirect to status string The status (text) of the response statusCode number The status (code) of the response tasks Promise < unknown >[] Any remaining tasks that should be handled even after the request was finished. type \"normal\" | \"redirect\" | \"custom\" Whether the response is \"normal\", a redirect or if the user wants to return a custom response Defined in router/RouterResponse.ts:32 routerRequest \u2022 routerRequest : default < AdditionalDataType > The RouterRequest class instance of the request Defined in router/RouterResponse.ts:82 Methods addTasks \u25b8 addTasks ( tasks ): default < AdditionalDataType > Adds any tasks that should still be complete even after the request has finished. Parameters Name Type tasks Promise < unknown > | Promise < unknown >[] Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:187 build \u25b8 build (): BuiltResponseObject < AdditionalDataType > Builds a final response data to be returned to the .serveRequest() method. Returns BuiltResponseObject < AdditionalDataType > Defined in router/RouterResponse.ts:250 json \u25b8 json ( data ): default < AdditionalDataType > Stringifies the input data into JSON and sends to the client (also automatically sets content-type to json) Parameters Name Type data unknown Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:127 raw \u25b8 raw ( body , contentType ): default < AdditionalDataType > Sends \"raw\" input data to the client (without processing from cloudflare-router), specify content type in 2nd parameter Parameters Name Type body ResponseBodyType contentType string Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:141 redirectTo \u25b8 redirectTo ( redirectUrl , redirectStatusCode? ): default < AdditionalDataType > Makes the response a redirect response, redirecting the user to the specified link, the default status code is 302 (temporary) Parameters Name Type Default value redirectUrl string undefined redirectStatusCode number 302 Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:201 setContentType \u25b8 setContentType ( contentType ): default < AdditionalDataType > Sets the content type of the response (does not process the body etc. regardless of content-type provided) Parameters Name Type contentType string Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:227 setCustomResponse \u25b8 setCustomResponse ( response ): default < AdditionalDataType > Sets a custom response if the user wants to return their own processed response object Parameters Name Type response Response Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:216 setMatchedRoute \u25b8 setMatchedRoute ( route ): void Sets the route that the RouterRequest matched to Parameters Name Type route default < AdditionalDataType > Returns void Defined in router/RouterResponse.ts:118 status \u25b8 status ( statusText ): default < AdditionalDataType > Sets the status (text) for this response that's sent to the client. Parameters Name Type statusText string Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:165 statusCode \u25b8 statusCode ( statusCode ): default < AdditionalDataType > Sets the status code) for this response that's sent to the client. Parameters Name Type statusCode number Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:176 text \u25b8 text ( text ): default < AdditionalDataType > Sends the input text to the user (overrides the body property) and automatically sets content type to text. Parameters Name Type text string Returns default < AdditionalDataType > Defined in router/RouterResponse.ts:153 transformResponseOptions \u25b8 transformResponseOptions (): Object Turns the status code, staus text and headers into an object for further processing of the cloudflare-router library Returns Object Name Type headers Headers status number statusText string Defined in router/RouterResponse.ts:238","title":"Class: default<AdditionalDataType\\>"},{"location":"classes/router_routerresponse.default.html#class-defaultadditionaldatatype","text":"router/RouterResponse .default","title":"Class: default&lt;AdditionalDataType>"},{"location":"classes/router_routerresponse.default.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_routerresponse.default.html#table-of-contents","text":"","title":"Table of contents"},{"location":"classes/router_routerresponse.default.html#constructors","text":"constructor","title":"Constructors"},{"location":"classes/router_routerresponse.default.html#properties","text":"locals matchedRoute responseOptions routerRequest","title":"Properties"},{"location":"classes/router_routerresponse.default.html#methods","text":"addTasks build json raw redirectTo setContentType setCustomResponse setMatchedRoute status statusCode text transformResponseOptions","title":"Methods"},{"location":"classes/router_routerresponse.default.html#constructors_1","text":"","title":"Constructors"},{"location":"classes/router_routerresponse.default.html#constructor","text":"\u2022 new default < AdditionalDataType >( routerRequest ) Creates a RouterResponse class instance.","title":"constructor"},{"location":"classes/router_routerresponse.default.html#type-parameters_1","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"classes/router_routerresponse.default.html#parameters","text":"Name Type routerRequest default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#defined-in","text":"router/RouterResponse.ts:92","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#properties_1","text":"","title":"Properties"},{"location":"classes/router_routerresponse.default.html#locals","text":"\u2022 locals : Record < any , any > Used as a temporary \"cache\" to share data between middlewares and the response handler (i.e. auth status)","title":"locals"},{"location":"classes/router_routerresponse.default.html#defined-in_1","text":"router/RouterResponse.ts:92","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#matchedroute","text":"\u2022 matchedRoute : null | default < AdditionalDataType > The route that the request matched to","title":"matchedRoute"},{"location":"classes/router_routerresponse.default.html#defined-in_2","text":"router/RouterResponse.ts:87","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#responseoptions","text":"\u2022 responseOptions : Object Used internally as a temporary thing to hold on values before the .build() method is called","title":"responseOptions"},{"location":"classes/router_routerresponse.default.html#type-declaration","text":"Name Type Description body ResponseBodyType The body of the response tha will be sent to the client customResponse? Response If the user wants to provide a custom response that should be returned instead of processing by cloudflare-router headers Record < string , string > The headers to be sent to the client redirect Object Information regarding the redirect if the type is set to \"redirect\" redirect.redirectStatusCode? number The status code of the redirect, default is 302 (temporary) redirect.redirectToUrl? string The URL to redirect to status string The status (text) of the response statusCode number The status (code) of the response tasks Promise < unknown >[] Any remaining tasks that should be handled even after the request was finished. type \"normal\" | \"redirect\" | \"custom\" Whether the response is \"normal\", a redirect or if the user wants to return a custom response","title":"Type declaration"},{"location":"classes/router_routerresponse.default.html#defined-in_3","text":"router/RouterResponse.ts:32","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#routerrequest","text":"\u2022 routerRequest : default < AdditionalDataType > The RouterRequest class instance of the request","title":"routerRequest"},{"location":"classes/router_routerresponse.default.html#defined-in_4","text":"router/RouterResponse.ts:82","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#methods_1","text":"","title":"Methods"},{"location":"classes/router_routerresponse.default.html#addtasks","text":"\u25b8 addTasks ( tasks ): default < AdditionalDataType > Adds any tasks that should still be complete even after the request has finished.","title":"addTasks"},{"location":"classes/router_routerresponse.default.html#parameters_1","text":"Name Type tasks Promise < unknown > | Promise < unknown >[]","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_5","text":"router/RouterResponse.ts:187","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#build","text":"\u25b8 build (): BuiltResponseObject < AdditionalDataType > Builds a final response data to be returned to the .serveRequest() method.","title":"build"},{"location":"classes/router_routerresponse.default.html#returns_1","text":"BuiltResponseObject < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_6","text":"router/RouterResponse.ts:250","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#json","text":"\u25b8 json ( data ): default < AdditionalDataType > Stringifies the input data into JSON and sends to the client (also automatically sets content-type to json)","title":"json"},{"location":"classes/router_routerresponse.default.html#parameters_2","text":"Name Type data unknown","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_2","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_7","text":"router/RouterResponse.ts:127","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#raw","text":"\u25b8 raw ( body , contentType ): default < AdditionalDataType > Sends \"raw\" input data to the client (without processing from cloudflare-router), specify content type in 2nd parameter","title":"raw"},{"location":"classes/router_routerresponse.default.html#parameters_3","text":"Name Type body ResponseBodyType contentType string","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_3","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_8","text":"router/RouterResponse.ts:141","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#redirectto","text":"\u25b8 redirectTo ( redirectUrl , redirectStatusCode? ): default < AdditionalDataType > Makes the response a redirect response, redirecting the user to the specified link, the default status code is 302 (temporary)","title":"redirectTo"},{"location":"classes/router_routerresponse.default.html#parameters_4","text":"Name Type Default value redirectUrl string undefined redirectStatusCode number 302","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_4","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_9","text":"router/RouterResponse.ts:201","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#setcontenttype","text":"\u25b8 setContentType ( contentType ): default < AdditionalDataType > Sets the content type of the response (does not process the body etc. regardless of content-type provided)","title":"setContentType"},{"location":"classes/router_routerresponse.default.html#parameters_5","text":"Name Type contentType string","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_5","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_10","text":"router/RouterResponse.ts:227","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#setcustomresponse","text":"\u25b8 setCustomResponse ( response ): default < AdditionalDataType > Sets a custom response if the user wants to return their own processed response object","title":"setCustomResponse"},{"location":"classes/router_routerresponse.default.html#parameters_6","text":"Name Type response Response","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_6","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_11","text":"router/RouterResponse.ts:216","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#setmatchedroute","text":"\u25b8 setMatchedRoute ( route ): void Sets the route that the RouterRequest matched to","title":"setMatchedRoute"},{"location":"classes/router_routerresponse.default.html#parameters_7","text":"Name Type route default < AdditionalDataType >","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_7","text":"void","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_12","text":"router/RouterResponse.ts:118","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#status","text":"\u25b8 status ( statusText ): default < AdditionalDataType > Sets the status (text) for this response that's sent to the client.","title":"status"},{"location":"classes/router_routerresponse.default.html#parameters_8","text":"Name Type statusText string","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_8","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_13","text":"router/RouterResponse.ts:165","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#statuscode","text":"\u25b8 statusCode ( statusCode ): default < AdditionalDataType > Sets the status code) for this response that's sent to the client.","title":"statusCode"},{"location":"classes/router_routerresponse.default.html#parameters_9","text":"Name Type statusCode number","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_9","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_14","text":"router/RouterResponse.ts:176","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#text","text":"\u25b8 text ( text ): default < AdditionalDataType > Sends the input text to the user (overrides the body property) and automatically sets content type to text.","title":"text"},{"location":"classes/router_routerresponse.default.html#parameters_10","text":"Name Type text string","title":"Parameters"},{"location":"classes/router_routerresponse.default.html#returns_10","text":"default < AdditionalDataType >","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_15","text":"router/RouterResponse.ts:153","title":"Defined in"},{"location":"classes/router_routerresponse.default.html#transformresponseoptions","text":"\u25b8 transformResponseOptions (): Object Turns the status code, staus text and headers into an object for further processing of the cloudflare-router library","title":"transformResponseOptions"},{"location":"classes/router_routerresponse.default.html#returns_11","text":"Object Name Type headers Headers status number statusText string","title":"Returns"},{"location":"classes/router_routerresponse.default.html#defined-in_16","text":"router/RouterResponse.ts:238","title":"Defined in"},{"location":"interfaces/router_route.routeoptions.html","text":"Interface: RouteOptions<AdditionalDataType> router/Route .RouteOptions Type parameters Name Type AdditionalDataType extends unknown Table of contents Properties handler isMiddleware method path routeIndex Properties handler \u2022 handler : RouteHandler < AdditionalDataType > The handler that will process matching requests Defined in router/Route.ts:16 isMiddleware \u2022 isMiddleware : boolean If this is a middleware (don't provide this unless you know what you're doing) Defined in router/Route.ts:24 method \u2022 method : Methods Which method this route will handle (\"ANY\" will handle all methods) Defined in router/Route.ts:20 path \u2022 path : string The relative path for the route. The Route class instance will automatically fetch the basepath and make the path accurate. Defined in router/Route.ts:12 routeIndex \u2022 Optional routeIndex : number Used internally when updating routes, which happens when you use router.use() Defined in router/Route.ts:28","title":"Interface: RouteOptions<AdditionalDataType\\>"},{"location":"interfaces/router_route.routeoptions.html#interface-routeoptionsadditionaldatatype","text":"router/Route .RouteOptions","title":"Interface: RouteOptions&lt;AdditionalDataType>"},{"location":"interfaces/router_route.routeoptions.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"interfaces/router_route.routeoptions.html#table-of-contents","text":"","title":"Table of contents"},{"location":"interfaces/router_route.routeoptions.html#properties","text":"handler isMiddleware method path routeIndex","title":"Properties"},{"location":"interfaces/router_route.routeoptions.html#properties_1","text":"","title":"Properties"},{"location":"interfaces/router_route.routeoptions.html#handler","text":"\u2022 handler : RouteHandler < AdditionalDataType > The handler that will process matching requests","title":"handler"},{"location":"interfaces/router_route.routeoptions.html#defined-in","text":"router/Route.ts:16","title":"Defined in"},{"location":"interfaces/router_route.routeoptions.html#ismiddleware","text":"\u2022 isMiddleware : boolean If this is a middleware (don't provide this unless you know what you're doing)","title":"isMiddleware"},{"location":"interfaces/router_route.routeoptions.html#defined-in_1","text":"router/Route.ts:24","title":"Defined in"},{"location":"interfaces/router_route.routeoptions.html#method","text":"\u2022 method : Methods Which method this route will handle (\"ANY\" will handle all methods)","title":"method"},{"location":"interfaces/router_route.routeoptions.html#defined-in_2","text":"router/Route.ts:20","title":"Defined in"},{"location":"interfaces/router_route.routeoptions.html#path","text":"\u2022 path : string The relative path for the route. The Route class instance will automatically fetch the basepath and make the path accurate.","title":"path"},{"location":"interfaces/router_route.routeoptions.html#defined-in_3","text":"router/Route.ts:12","title":"Defined in"},{"location":"interfaces/router_route.routeoptions.html#routeindex","text":"\u2022 Optional routeIndex : number Used internally when updating routes, which happens when you use router.use()","title":"routeIndex"},{"location":"interfaces/router_route.routeoptions.html#defined-in_4","text":"router/Route.ts:28","title":"Defined in"},{"location":"interfaces/router_router.routeroptions.html","text":"Interface: RouterOptions<AdditionalDataType> router/Router .RouterOptions Type parameters Name Type AdditionalDataType extends unknown Table of contents Properties basePath customResponseBuilder parent waterfallHandling Properties basePath \u2022 Optional basePath : string Defined in router/Router.ts:15 customResponseBuilder \u2022 Optional customResponseBuilder : ( routerResponse : default < AdditionalDataType >) => any Type declaration \u25b8 ( routerResponse ): any Parameters Name Type routerResponse default < AdditionalDataType > Returns any Defined in router/Router.ts:18 parent \u2022 Optional parent : default < AdditionalDataType > Defined in router/Router.ts:17 waterfallHandling \u2022 Optional waterfallHandling : boolean Defined in router/Router.ts:16","title":"Interface: RouterOptions<AdditionalDataType\\>"},{"location":"interfaces/router_router.routeroptions.html#interface-routeroptionsadditionaldatatype","text":"router/Router .RouterOptions","title":"Interface: RouterOptions&lt;AdditionalDataType>"},{"location":"interfaces/router_router.routeroptions.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"interfaces/router_router.routeroptions.html#table-of-contents","text":"","title":"Table of contents"},{"location":"interfaces/router_router.routeroptions.html#properties","text":"basePath customResponseBuilder parent waterfallHandling","title":"Properties"},{"location":"interfaces/router_router.routeroptions.html#properties_1","text":"","title":"Properties"},{"location":"interfaces/router_router.routeroptions.html#basepath","text":"\u2022 Optional basePath : string","title":"basePath"},{"location":"interfaces/router_router.routeroptions.html#defined-in","text":"router/Router.ts:15","title":"Defined in"},{"location":"interfaces/router_router.routeroptions.html#customresponsebuilder","text":"\u2022 Optional customResponseBuilder : ( routerResponse : default < AdditionalDataType >) => any","title":"customResponseBuilder"},{"location":"interfaces/router_router.routeroptions.html#type-declaration","text":"\u25b8 ( routerResponse ): any","title":"Type declaration"},{"location":"interfaces/router_router.routeroptions.html#parameters","text":"Name Type routerResponse default < AdditionalDataType >","title":"Parameters"},{"location":"interfaces/router_router.routeroptions.html#returns","text":"any","title":"Returns"},{"location":"interfaces/router_router.routeroptions.html#defined-in_1","text":"router/Router.ts:18","title":"Defined in"},{"location":"interfaces/router_router.routeroptions.html#parent","text":"\u2022 Optional parent : default < AdditionalDataType >","title":"parent"},{"location":"interfaces/router_router.routeroptions.html#defined-in_2","text":"router/Router.ts:17","title":"Defined in"},{"location":"interfaces/router_router.routeroptions.html#waterfallhandling","text":"\u2022 Optional waterfallHandling : boolean","title":"waterfallHandling"},{"location":"interfaces/router_router.routeroptions.html#defined-in_3","text":"router/Router.ts:16","title":"Defined in"},{"location":"modules/index.html","text":"Module: index Table of contents References Route RoutePath Router RouterRequest RouterResponse References Route Renames and exports: default RoutePath Renames and exports: default Router Renames and exports: default RouterRequest Renames and exports: default RouterResponse Renames and exports: default","title":"Module: index"},{"location":"modules/index.html#module-index","text":"","title":"Module: index"},{"location":"modules/index.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/index.html#references","text":"Route RoutePath Router RouterRequest RouterResponse","title":"References"},{"location":"modules/index.html#references_1","text":"","title":"References"},{"location":"modules/index.html#route","text":"Renames and exports: default","title":"Route"},{"location":"modules/index.html#routepath","text":"Renames and exports: default","title":"RoutePath"},{"location":"modules/index.html#router","text":"Renames and exports: default","title":"Router"},{"location":"modules/index.html#routerrequest","text":"Renames and exports: default","title":"RouterRequest"},{"location":"modules/index.html#routerresponse","text":"Renames and exports: default","title":"RouterResponse"},{"location":"modules/router_route.html","text":"Module: router/Route Table of contents Classes default Interfaces RouteOptions Type aliases RouteFunctionalHandler RouteHandler Type aliases RouteFunctionalHandler \u01ac RouteFunctionalHandler < AdditionalDataType >: ( request : default < AdditionalDataType >, response : default < AdditionalDataType >, additionalData : AdditionalDataType , next? : ( abort? : boolean ) => void ) => void Type parameters Name Type AdditionalDataType extends unknown Type declaration \u25b8 ( request , response , additionalData , next? ): void The handler for a certain route Parameters Name Type request default < AdditionalDataType > response default < AdditionalDataType > additionalData AdditionalDataType next? ( abort? : boolean ) => void Returns void Defined in router/Route.ts:35 RouteHandler \u01ac RouteHandler < AdditionalDataType >: default < AdditionalDataType > | RouteFunctionalHandler < AdditionalDataType > Type parameters Name Type AdditionalDataType extends unknown Defined in router/Route.ts:41","title":"Module: router/Route"},{"location":"modules/router_route.html#module-routerroute","text":"","title":"Module: router/Route"},{"location":"modules/router_route.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/router_route.html#classes","text":"default","title":"Classes"},{"location":"modules/router_route.html#interfaces","text":"RouteOptions","title":"Interfaces"},{"location":"modules/router_route.html#type-aliases","text":"RouteFunctionalHandler RouteHandler","title":"Type aliases"},{"location":"modules/router_route.html#type-aliases_1","text":"","title":"Type aliases"},{"location":"modules/router_route.html#routefunctionalhandler","text":"\u01ac RouteFunctionalHandler < AdditionalDataType >: ( request : default < AdditionalDataType >, response : default < AdditionalDataType >, additionalData : AdditionalDataType , next? : ( abort? : boolean ) => void ) => void","title":"RouteFunctionalHandler"},{"location":"modules/router_route.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"modules/router_route.html#type-declaration","text":"\u25b8 ( request , response , additionalData , next? ): void The handler for a certain route","title":"Type declaration"},{"location":"modules/router_route.html#parameters","text":"Name Type request default < AdditionalDataType > response default < AdditionalDataType > additionalData AdditionalDataType next? ( abort? : boolean ) => void","title":"Parameters"},{"location":"modules/router_route.html#returns","text":"void","title":"Returns"},{"location":"modules/router_route.html#defined-in","text":"router/Route.ts:35","title":"Defined in"},{"location":"modules/router_route.html#routehandler","text":"\u01ac RouteHandler < AdditionalDataType >: default < AdditionalDataType > | RouteFunctionalHandler < AdditionalDataType >","title":"RouteHandler"},{"location":"modules/router_route.html#type-parameters_1","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"modules/router_route.html#defined-in_1","text":"router/Route.ts:41","title":"Defined in"},{"location":"modules/router_routepath.html","text":"Module: router/RoutePath Table of contents Classes default","title":"Module: router/RoutePath"},{"location":"modules/router_routepath.html#module-routerroutepath","text":"","title":"Module: router/RoutePath"},{"location":"modules/router_routepath.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/router_routepath.html#classes","text":"default","title":"Classes"},{"location":"modules/router_router.html","text":"Module: router/Router Table of contents Classes default Interfaces RouterOptions Type aliases MatchingRoute Methods Type aliases MatchingRoute \u01ac MatchingRoute < AdditionalDataType >: Object Type parameters Name AdditionalDataType Type declaration Name Type match Exclude < any , \"undefined\" > route default < AdditionalDataType > Defined in router/Router.ts:22 Methods \u01ac Methods : \"ANY\" | \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"OPTIONS\" | \"HEAD\" | \"DELETE\" Defined in router/Router.ts:6","title":"Module: router/Router"},{"location":"modules/router_router.html#module-routerrouter","text":"","title":"Module: router/Router"},{"location":"modules/router_router.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/router_router.html#classes","text":"default","title":"Classes"},{"location":"modules/router_router.html#interfaces","text":"RouterOptions","title":"Interfaces"},{"location":"modules/router_router.html#type-aliases","text":"MatchingRoute Methods","title":"Type aliases"},{"location":"modules/router_router.html#type-aliases_1","text":"","title":"Type aliases"},{"location":"modules/router_router.html#matchingroute","text":"\u01ac MatchingRoute < AdditionalDataType >: Object","title":"MatchingRoute"},{"location":"modules/router_router.html#type-parameters","text":"Name AdditionalDataType","title":"Type parameters"},{"location":"modules/router_router.html#type-declaration","text":"Name Type match Exclude < any , \"undefined\" > route default < AdditionalDataType >","title":"Type declaration"},{"location":"modules/router_router.html#defined-in","text":"router/Router.ts:22","title":"Defined in"},{"location":"modules/router_router.html#methods","text":"\u01ac Methods : \"ANY\" | \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"OPTIONS\" | \"HEAD\" | \"DELETE\"","title":"Methods"},{"location":"modules/router_router.html#defined-in_1","text":"router/Router.ts:6","title":"Defined in"},{"location":"modules/router_routerrequest.html","text":"Module: router/RouterRequest Table of contents Classes default","title":"Module: router/RouterRequest"},{"location":"modules/router_routerrequest.html#module-routerrouterrequest","text":"","title":"Module: router/RouterRequest"},{"location":"modules/router_routerrequest.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/router_routerrequest.html#classes","text":"default","title":"Classes"},{"location":"modules/router_routerresponse.html","text":"Module: router/RouterResponse Table of contents Classes default Type aliases BuiltResponseObject ResponseBodyType Type aliases BuiltResponseObject \u01ac BuiltResponseObject < AdditionalDataType >: Object The result of the response.build() call, which generates the final response from the cloudflare-router library Type parameters Name Type AdditionalDataType extends unknown Type declaration Name Type response Response routerRequest default < AdditionalDataType > routerResponse default < AdditionalDataType > tasks Promise < unknown >[] Defined in router/RouterResponse.ts:19 ResponseBodyType \u01ac ResponseBodyType : string | Blob | ArrayBufferView | ArrayBuffer | FormData | URLSearchParams | ReadableStream < Uint8Array > | null | undefined Defined in router/RouterResponse.ts:5","title":"Module: router/RouterResponse"},{"location":"modules/router_routerresponse.html#module-routerrouterresponse","text":"","title":"Module: router/RouterResponse"},{"location":"modules/router_routerresponse.html#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/router_routerresponse.html#classes","text":"default","title":"Classes"},{"location":"modules/router_routerresponse.html#type-aliases","text":"BuiltResponseObject ResponseBodyType","title":"Type aliases"},{"location":"modules/router_routerresponse.html#type-aliases_1","text":"","title":"Type aliases"},{"location":"modules/router_routerresponse.html#builtresponseobject","text":"\u01ac BuiltResponseObject < AdditionalDataType >: Object The result of the response.build() call, which generates the final response from the cloudflare-router library","title":"BuiltResponseObject"},{"location":"modules/router_routerresponse.html#type-parameters","text":"Name Type AdditionalDataType extends unknown","title":"Type parameters"},{"location":"modules/router_routerresponse.html#type-declaration","text":"Name Type response Response routerRequest default < AdditionalDataType > routerResponse default < AdditionalDataType > tasks Promise < unknown >[]","title":"Type declaration"},{"location":"modules/router_routerresponse.html#defined-in","text":"router/RouterResponse.ts:19","title":"Defined in"},{"location":"modules/router_routerresponse.html#responsebodytype","text":"\u01ac ResponseBodyType : string | Blob | ArrayBufferView | ArrayBuffer | FormData | URLSearchParams | ReadableStream < Uint8Array > | null | undefined","title":"ResponseBodyType"},{"location":"modules/router_routerresponse.html#defined-in_1","text":"router/RouterResponse.ts:5","title":"Defined in"}]}